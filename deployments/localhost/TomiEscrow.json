{
  "address": "0x1D13fF25b10C9a6741DFdce229073bed652197c7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_DELEGATE",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "DgasToTokenRated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalWithdraw",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "EmergencyWithdrawStatusUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldImpl",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newImpl",
          "type": "address"
        }
      ],
      "name": "ImplChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "shareToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "RewardWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dgasRate",
          "type": "uint256"
        }
      ],
      "name": "ShareTokenSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dgasRate",
          "type": "uint256"
        }
      ],
      "name": "ShareTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DELEGATE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ableToEmergencyWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "emergencyWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "impl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enableEmergencyWithdraw",
          "type": "bool"
        }
      ],
      "name": "setEmergencyWithdrawStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dgasRate",
          "type": "uint256"
        }
      ],
      "name": "setShareToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "shareTokenExisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "shareTokenReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shareTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "dgasRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dgasRate",
          "type": "uint256"
        }
      ],
      "name": "updateShareTokenRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newImpl",
          "type": "address"
        }
      ],
      "name": "upgradeImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x87bf1e2618582f5ebbc7f0e696619943a2e16cd8e3d141902dbf44700a764b26",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x1D13fF25b10C9a6741DFdce229073bed652197c7",
    "transactionIndex": 0,
    "gasUsed": "1100433",
    "logsBloom": "0x
    "blockHash": "0x3809ae994c8481bd650b1456a3647a32f038a34ea88c87fb05edb103c300a48f",
    "transactionHash": "0x87bf1e2618582f5ebbc7f0e696619943a2e16cd8e3d141902dbf44700a764b26",
    "logs": [],
    "blockNumber": 12619177,
    "cumulativeGasUsed": "1100433",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4DAf17c8142A483B2E2348f56ae0F2cFDAe22ceE"
  ],
  "solcInputHash": "1f11d9c536cc663d3a2ed9f95e5fd735",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DELEGATE\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"DgasToTokenRated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdraw\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"EmergencyWithdrawStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldImpl\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newImpl\",\"type\":\"address\"}],\"name\":\"ImplChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"shareToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"RewardWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dgasRate\",\"type\":\"uint256\"}],\"name\":\"ShareTokenSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dgasRate\",\"type\":\"uint256\"}],\"name\":\"ShareTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DELEGATE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ableToEmergencyWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"impl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableEmergencyWithdraw\",\"type\":\"bool\"}],\"name\":\"setEmergencyWithdrawStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dgasRate\",\"type\":\"uint256\"}],\"name\":\"setShareToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"shareTokenExisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"shareTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shareTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dgasRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dgasRate\",\"type\":\"uint256\"}],\"name\":\"updateShareTokenRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImpl\",\"type\":\"address\"}],\"name\":\"upgradeImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TomiEscrow.sol\":\"TomiEscrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/TomiEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.6;\\r\\n\\r\\nimport \\\"./modules/Upgradable.sol\\\";\\r\\nimport './libraries/SafeMath.sol';\\r\\nimport './libraries/TransferHelper.sol';\\r\\nimport './modules/Pausable.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\n\\r\\ncontract TomiEscrow is UpgradableProduct, Pausable {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    // Token will be used for rewarding \\r\\n    struct ShareToken {\\r\\n        uint dgasRate;\\r\\n    }\\r\\n\\r\\n    // Address of DELEGATE Smart Contract\\r\\n    address public DELEGATE;\\r\\n    // Enable emergency withdraw or not \\r\\n    bool public ableToEmergencyWithdraw;\\r\\n\\r\\n    // Share token with rate config and remaining reward\\r\\n    mapping(address => ShareToken) public shareTokens;\\r\\n\\r\\n    // -----------------------------------------\\r\\n    // TomiEscrow's event\\r\\n    // -----------------------------------------\\r\\n    event RewardWithdraw(address shareToken, uint reward, address to);\\r\\n    event DgasToTokenRated(uint oldRate, uint newRate);\\r\\n    event ShareTokenUpdated(address tokenAddress, uint dgasRate);\\r\\n    event ShareTokenSettled(address tokenAddress, uint dgasRate);\\r\\n    event EmergencyWithdrawStatusUpdate(bool newState);\\r\\n    event EmergencyWithdraw(address to, uint totalWithdraw);\\r\\n\\r\\n    // -----------------------------------------\\r\\n    // -----------------------------------------\\r\\n\\r\\n    constructor(address _DELEGATE) UpgradableProduct() public {\\r\\n        DELEGATE = _DELEGATE;\\r\\n        ableToEmergencyWithdraw = false;\\r\\n    }\\r\\n\\r\\n    modifier onlyDelegate() {\\r\\n        require(msg.sender == DELEGATE, \\\"TomiEscrow::FORBIDDEN\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function setEmergencyWithdrawStatus(bool _enableEmergencyWithdraw) public requireImpl {\\r\\n        ableToEmergencyWithdraw = _enableEmergencyWithdraw;\\r\\n        emit EmergencyWithdrawStatusUpdate(ableToEmergencyWithdraw);\\r\\n    }\\r\\n\\r\\n    function setShareToken(address _tokenAddress, uint _dgasRate) public requireImpl {\\r\\n        require(!shareTokenExisted(_tokenAddress), \\\"TomiEscrow::Share token address already exist!\\\");\\r\\n        require(_tokenAddress != address(0), \\\"TomiEscrow::Share token address is not illegal\\\");\\r\\n        require(_dgasRate != uint(0), \\\"TomiEscrow::Share token rate is not illegal\\\");\\r\\n        shareTokens[_tokenAddress] = ShareToken(_dgasRate);\\r\\n\\r\\n        emit ShareTokenSettled(_tokenAddress, _dgasRate);\\r\\n    }\\r\\n\\r\\n    function emergencyWithdrawERC20(address _tokenAddress) public requireImpl whenPaused {\\r\\n        require(ableToEmergencyWithdraw, \\\"TomiEscrow::Emergency withdraw is disabled\\\");\\r\\n        uint totalReward = shareTokenReward(_tokenAddress);\\r\\n        require(totalReward > 0, \\\"TomiEscrow::Nothing to withdraw\\\");\\r\\n        \\r\\n        TransferHelper.safeTransfer(_tokenAddress, msg.sender, totalReward);\\r\\n        emit EmergencyWithdraw(msg.sender, totalReward);\\r\\n    }\\r\\n\\r\\n    function withdrawReward(address _tokenAddress, uint _amount, address _to) public whenNotPaused onlyDelegate {\\r\\n        require(shareTokenExisted(_tokenAddress), \\\"TomiEscrow::Share token not existed!\\\");\\r\\n        uint totalReward = shareTokenReward(_tokenAddress);\\r\\n        uint DGasToToken = shareTokens[_tokenAddress].dgasRate;\\r\\n        \\r\\n        require(totalReward >= _amount, \\\"TomiEscrow::Not enough rewards for withdraw!\\\");\\r\\n        \\r\\n        uint dgasToReward = _amount.mul(DGasToToken);\\r\\n        TransferHelper.safeTransfer(_tokenAddress, _to, dgasToReward);\\r\\n\\r\\n        emit RewardWithdraw(_tokenAddress, dgasToReward, _to);\\r\\n    }\\r\\n\\r\\n    function updateShareTokenRate(address _tokenAddress, uint _dgasRate) public requireImpl {\\r\\n        require(shareTokenExisted(_tokenAddress), \\\"TomiEscrow::Share token not existed!\\\");\\r\\n        require(_dgasRate != uint(0), \\\"TomiEscrow::Share token rate is not illegal\\\");\\r\\n        require( shareTokens[_tokenAddress].dgasRate != _dgasRate, \\\"TomiEscrow::Not be able to set same Dgas rate!\\\");\\r\\n\\r\\n        shareTokens[_tokenAddress].dgasRate = _dgasRate;\\r\\n\\r\\n        emit ShareTokenUpdated(_tokenAddress, _dgasRate);\\r\\n    }\\r\\n\\r\\n    function shareTokenExisted(address _tokenAddress) public view returns(bool) {\\r\\n        require(_tokenAddress != address(0), \\\"TomiEscrow::Share token address is illegal\\\");\\r\\n        return shareTokens[_tokenAddress].dgasRate != uint(0);\\r\\n    }\\r\\n\\r\\n    function shareTokenReward(address _tokenAddress) public view returns(uint) {\\r\\n        return IERC20(_tokenAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    function pause() external requireImpl {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    function unpause() external requireImpl {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    fallback() external {\\r\\n\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6ad8c0e98d4bce64499dcfc0efcacf913b9f8deea115b832f68cc5cc7fc90053\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n}\",\"keccak256\":\"0x026fb4c4604e2f6777f72ade61eb8181e39ecaea75623738b5b4db133b96baf9\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.6.0;\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xaa5974a17de3ff0a3b5132f2d65f957c60450c398b0e6bf252cd8c80c43a4724\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\n\\r\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\r\\nlibrary TransferHelper {\\r\\n    function safeApprove(address token, address to, uint value) internal {\\r\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\\r\\n    }\\r\\n\\r\\n    function safeTransfer(address token, address to, uint value) internal {\\r\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\\r\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\\r\\n    }\\r\\n\\r\\n    function safeTransferETH(address to, uint value) internal {\\r\\n        (bool success,) = to.call{value:value}(new bytes(0));\\r\\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb5f3cf668e1f9bf0dae128e0cb040799986fb4ea8f48b79bc6a5b7152fc6fac6\"},\"contracts/modules/Pausable.sol\":{\"content\":\"  \\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.5.16;\\r\\n\\r\\n/**\\r\\n * @dev Contract module which allows children to implement an emergency stop\\r\\n * mechanism that can be triggered by an authorized account.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the\\r\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\r\\n * the functions of your contract. Note that they will not be pausable by\\r\\n * simply including this module, only once the modifiers are put in place.\\r\\n */\\r\\nabstract contract Pausable {\\r\\n    /**\\r\\n     * @dev Emitted when the pause is triggered by `account`.\\r\\n     */\\r\\n    event Paused(address account);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pause is lifted by `account`.\\r\\n     */\\r\\n    event Unpaused(address account);\\r\\n\\r\\n    bool private _paused;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract in unpaused state.\\r\\n     */\\r\\n    constructor() public {\\r\\n        _paused = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the contract is paused, and false otherwise.\\r\\n     */\\r\\n    function paused() public view virtual returns (bool) {\\r\\n        return _paused;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must not be paused.\\r\\n     */\\r\\n    modifier whenNotPaused() {\\r\\n        require(!paused(), \\\"Pausable: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is paused.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must be paused.\\r\\n     */\\r\\n    modifier whenPaused() {\\r\\n        require(paused(), \\\"Pausable: not paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Triggers stopped state.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must not be paused.\\r\\n     */\\r\\n    function _pause() internal virtual whenNotPaused {\\r\\n        _paused = true;\\r\\n        emit Paused(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns to normal state.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must be paused.\\r\\n     */\\r\\n    function _unpause() internal virtual whenPaused {\\r\\n        _paused = false;\\r\\n        emit Unpaused(msg.sender);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x423af871553ef670154616472b17d9c82473977abcdf14adfa9fbea0465c39a4\"},\"contracts/modules/Upgradable.sol\":{\"content\":\"pragma solidity >=0.5.16;\\r\\n\\r\\ncontract UpgradableProduct {\\r\\n    address public impl;\\r\\n\\r\\n    event ImplChanged(address indexed _oldImpl, address indexed _newImpl);\\r\\n\\r\\n    constructor() public {\\r\\n        impl = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier requireImpl() {\\r\\n        require(msg.sender == impl, 'FORBIDDEN');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function upgradeImpl(address _newImpl) public requireImpl {\\r\\n        require(_newImpl != address(0), 'INVALID_ADDRESS');\\r\\n        require(_newImpl != impl, 'NO_CHANGE');\\r\\n        address lastImpl = impl;\\r\\n        impl = _newImpl;\\r\\n        emit ImplChanged(lastImpl, _newImpl);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UpgradableGovernance {\\r\\n    address public governor;\\r\\n\\r\\n    event GovernorChanged(address indexed _oldGovernor, address indexed _newGovernor);\\r\\n\\r\\n    constructor() public {\\r\\n        governor = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier requireGovernor() {\\r\\n        require(msg.sender == governor, 'FORBIDDEN');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function upgradeGovernance(address _newGovernor) public requireGovernor {\\r\\n        require(_newGovernor != address(0), 'INVALID_ADDRESS');\\r\\n        require(_newGovernor != governor, 'NO_CHANGE');\\r\\n        address lastGovernor = governor;\\r\\n        governor = _newGovernor;\\r\\n        emit GovernorChanged(lastGovernor, _newGovernor);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc92a59e3b0ba81a8a30e6d0467e1bb9337195764ccf75af335be8220c38c0f90\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15564,
        "contract": "contracts/TomiEscrow.sol:TomiEscrow",
        "label": "impl",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14825,
        "contract": "contracts/TomiEscrow.sol:TomiEscrow",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1679,
        "contract": "contracts/TomiEscrow.sol:TomiEscrow",
        "label": "DELEGATE",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1681,
        "contract": "contracts/TomiEscrow.sol:TomiEscrow",
        "label": "ableToEmergencyWithdraw",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 1685,
        "contract": "contracts/TomiEscrow.sol:TomiEscrow",
        "label": "shareTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(ShareToken)1677_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(ShareToken)1677_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct TomiEscrow.ShareToken)",
        "numberOfBytes": "32",
        "value": "t_struct(ShareToken)1677_storage"
      },
      "t_struct(ShareToken)1677_storage": {
        "encoding": "inplace",
        "label": "struct TomiEscrow.ShareToken",
        "members": [
          {
            "astId": 1676,
            "contract": "contracts/TomiEscrow.sol:TomiEscrow",
            "label": "dgasRate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}