/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TomiConfigInterface extends ethers.utils.Interface {
  functions: {
    "CLOSED()": FunctionFragment;
    "NONE()": FunctionFragment;
    "OPENED()": FunctionFragment;
    "PENDING()": FunctionFragment;
    "PERCENT_DENOMINATOR()": FunctionFragment;
    "REGISTERED()": FunctionFragment;
    "TGAS_DECIMAL()": FunctionFragment;
    "addToken(address)": FunctionFragment;
    "changeConfig(bytes32,uint256,uint256,uint256,uint256)": FunctionFragment;
    "changeConfigValue(bytes32,uint256)": FunctionFragment;
    "changeGovernor(address)": FunctionFragment;
    "changeOwner(address)": FunctionFragment;
    "checkPair(address,address)": FunctionFragment;
    "checkToken(address)": FunctionFragment;
    "configs(bytes32)": FunctionFragment;
    "defaultListTokens(uint256)": FunctionFragment;
    "dev()": FunctionFragment;
    "getConfig(bytes32)": FunctionFragment;
    "getConfigValue(bytes32)": FunctionFragment;
    "getDefaultListTokens()": FunctionFragment;
    "governor()": FunctionFragment;
    "initialize(address,address,address,address,address[])": FunctionFragment;
    "iterateValidTokens(uint256,uint256)": FunctionFragment;
    "modifyDev(address)": FunctionFragment;
    "modifyGovernor(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "platform()": FunctionFragment;
    "publishTime(address)": FunctionFragment;
    "publishToken(address)": FunctionFragment;
    "registryToken(address)": FunctionFragment;
    "tgas()": FunctionFragment;
    "tokenCount()": FunctionFragment;
    "tokenList(uint256)": FunctionFragment;
    "tokenStatus(address)": FunctionFragment;
    "updateToken(address,uint256)": FunctionFragment;
    "validTokens()": FunctionFragment;
    "version()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "CLOSED", values?: undefined): string;
  encodeFunctionData(functionFragment: "NONE", values?: undefined): string;
  encodeFunctionData(functionFragment: "OPENED", values?: undefined): string;
  encodeFunctionData(functionFragment: "PENDING", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "PERCENT_DENOMINATOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REGISTERED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TGAS_DECIMAL",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "addToken", values: [string]): string;
  encodeFunctionData(
    functionFragment: "changeConfig",
    values: [BytesLike, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeConfigValue",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeGovernor",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "changeOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "checkPair",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "checkToken", values: [string]): string;
  encodeFunctionData(functionFragment: "configs", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "defaultListTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "dev", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getConfig",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getConfigValue",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultListTokens",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "iterateValidTokens",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "modifyDev", values: [string]): string;
  encodeFunctionData(
    functionFragment: "modifyGovernor",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "platform", values?: undefined): string;
  encodeFunctionData(functionFragment: "publishTime", values: [string]): string;
  encodeFunctionData(
    functionFragment: "publishToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "registryToken",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "tgas", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenList",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "tokenStatus", values: [string]): string;
  encodeFunctionData(
    functionFragment: "updateToken",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "validTokens",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(functionFragment: "CLOSED", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "NONE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "OPENED", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PENDING", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "PERCENT_DENOMINATOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "REGISTERED", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "TGAS_DECIMAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeConfigValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "checkPair", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "checkToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "configs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "defaultListTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "dev", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getConfig", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getConfigValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultListTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "iterateValidTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "modifyDev", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "modifyGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "platform", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "publishTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publishToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registryToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tgas", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenList", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;

  events: {
    "ChangeGovernor(address,address)": EventFragment;
    "ConfigValueChanged(bytes32,uint256,uint256)": EventFragment;
    "OwnerChanged(address,address)": EventFragment;
    "TokenStatusChanged(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangeGovernor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ConfigValueChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenStatusChanged"): EventFragment;
}

export class TomiConfig extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TomiConfigInterface;

  functions: {
    CLOSED(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "CLOSED()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    NONE(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "NONE()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    OPENED(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "OPENED()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    PENDING(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "PENDING()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    PERCENT_DENOMINATOR(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "PERCENT_DENOMINATOR()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    REGISTERED(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "REGISTERED()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    TGAS_DECIMAL(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "TGAS_DECIMAL()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    addToken(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeConfig(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeConfig(bytes32,uint256,uint256,uint256,uint256)"(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeConfigValue(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeConfigValue(bytes32,uint256)"(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeGovernor(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeOwner(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeOwner(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    checkPair(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "checkPair(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    checkToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "checkToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    configs(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "configs(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    defaultListTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "defaultListTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    dev(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "dev()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getConfig(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "getConfig(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getConfigValue(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getConfigValue(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getDefaultListTokens(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getDefaultListTokens()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    governor(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "governor()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    initialize(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,address,address[])"(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    iterateValidTokens(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "iterateValidTokens(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    modifyDev(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "modifyDev(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    modifyGovernor(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "modifyGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    platform(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "platform()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    publishTime(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "publishTime(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    publishToken(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "publishToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    registryToken(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registryToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    tgas(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "tgas()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    tokenCount(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "tokenCount()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    tokenList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tokenList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tokenStatus(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "tokenStatus(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    updateToken(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateToken(address,uint256)"(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    validTokens(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "validTokens()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    version(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "version()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;
  };

  CLOSED(overrides?: CallOverrides): Promise<BigNumber>;

  "CLOSED()"(overrides?: CallOverrides): Promise<BigNumber>;

  NONE(overrides?: CallOverrides): Promise<BigNumber>;

  "NONE()"(overrides?: CallOverrides): Promise<BigNumber>;

  OPENED(overrides?: CallOverrides): Promise<BigNumber>;

  "OPENED()"(overrides?: CallOverrides): Promise<BigNumber>;

  PENDING(overrides?: CallOverrides): Promise<BigNumber>;

  "PENDING()"(overrides?: CallOverrides): Promise<BigNumber>;

  PERCENT_DENOMINATOR(overrides?: CallOverrides): Promise<BigNumber>;

  "PERCENT_DENOMINATOR()"(overrides?: CallOverrides): Promise<BigNumber>;

  REGISTERED(overrides?: CallOverrides): Promise<BigNumber>;

  "REGISTERED()"(overrides?: CallOverrides): Promise<BigNumber>;

  TGAS_DECIMAL(overrides?: CallOverrides): Promise<BigNumber>;

  "TGAS_DECIMAL()"(overrides?: CallOverrides): Promise<BigNumber>;

  addToken(_token: string, overrides?: Overrides): Promise<ContractTransaction>;

  "addToken(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeConfig(
    _name: BytesLike,
    _minValue: BigNumberish,
    _maxValue: BigNumberish,
    _maxSpan: BigNumberish,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeConfig(bytes32,uint256,uint256,uint256,uint256)"(
    _name: BytesLike,
    _minValue: BigNumberish,
    _maxValue: BigNumberish,
    _maxSpan: BigNumberish,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeConfigValue(
    _name: BytesLike,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeConfigValue(bytes32,uint256)"(
    _name: BytesLike,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeGovernor(
    _new: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeGovernor(address)"(
    _new: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeOwner(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeOwner(address)"(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  checkPair(
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "checkPair(address,address)"(
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  checkToken(_token: string, overrides?: CallOverrides): Promise<boolean>;

  "checkToken(address)"(
    _token: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  configs(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    minValue: BigNumber;
    maxValue: BigNumber;
    maxSpan: BigNumber;
    value: BigNumber;
    enable: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  "configs(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    minValue: BigNumber;
    maxValue: BigNumber;
    maxSpan: BigNumber;
    value: BigNumber;
    enable: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  defaultListTokens(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "defaultListTokens(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  dev(overrides?: CallOverrides): Promise<string>;

  "dev()"(overrides?: CallOverrides): Promise<string>;

  getConfig(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    minValue: BigNumber;
    maxValue: BigNumber;
    maxSpan: BigNumber;
    value: BigNumber;
    enable: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  "getConfig(bytes32)"(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    minValue: BigNumber;
    maxValue: BigNumber;
    maxSpan: BigNumber;
    value: BigNumber;
    enable: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  getConfigValue(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getConfigValue(bytes32)"(
    _name: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDefaultListTokens(overrides?: CallOverrides): Promise<string[]>;

  "getDefaultListTokens()"(overrides?: CallOverrides): Promise<string[]>;

  governor(overrides?: CallOverrides): Promise<string>;

  "governor()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _tgas: string,
    _governor: string,
    _platform: string,
    _dev: string,
    _listTokens: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,address,address[])"(
    _tgas: string,
    _governor: string,
    _platform: string,
    _dev: string,
    _listTokens: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  iterateValidTokens(
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "iterateValidTokens(uint256,uint256)"(
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  modifyDev(_new: string, overrides?: Overrides): Promise<ContractTransaction>;

  "modifyDev(address)"(
    _new: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  modifyGovernor(
    _new: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "modifyGovernor(address)"(
    _new: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  platform(overrides?: CallOverrides): Promise<string>;

  "platform()"(overrides?: CallOverrides): Promise<string>;

  publishTime(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "publishTime(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  publishToken(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "publishToken(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  registryToken(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registryToken(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  tgas(overrides?: CallOverrides): Promise<string>;

  "tgas()"(overrides?: CallOverrides): Promise<string>;

  tokenCount(overrides?: CallOverrides): Promise<BigNumber>;

  "tokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  tokenList(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenList(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokenStatus(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "tokenStatus(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  updateToken(
    _token: string,
    _status: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateToken(address,uint256)"(
    _token: string,
    _status: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  validTokens(overrides?: CallOverrides): Promise<string[]>;

  "validTokens()"(overrides?: CallOverrides): Promise<string[]>;

  version(overrides?: CallOverrides): Promise<BigNumber>;

  "version()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    CLOSED(overrides?: CallOverrides): Promise<BigNumber>;

    "CLOSED()"(overrides?: CallOverrides): Promise<BigNumber>;

    NONE(overrides?: CallOverrides): Promise<BigNumber>;

    "NONE()"(overrides?: CallOverrides): Promise<BigNumber>;

    OPENED(overrides?: CallOverrides): Promise<BigNumber>;

    "OPENED()"(overrides?: CallOverrides): Promise<BigNumber>;

    PENDING(overrides?: CallOverrides): Promise<BigNumber>;

    "PENDING()"(overrides?: CallOverrides): Promise<BigNumber>;

    PERCENT_DENOMINATOR(overrides?: CallOverrides): Promise<BigNumber>;

    "PERCENT_DENOMINATOR()"(overrides?: CallOverrides): Promise<BigNumber>;

    REGISTERED(overrides?: CallOverrides): Promise<BigNumber>;

    "REGISTERED()"(overrides?: CallOverrides): Promise<BigNumber>;

    TGAS_DECIMAL(overrides?: CallOverrides): Promise<BigNumber>;

    "TGAS_DECIMAL()"(overrides?: CallOverrides): Promise<BigNumber>;

    addToken(_token: string, overrides?: CallOverrides): Promise<boolean>;

    "addToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    changeConfig(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "changeConfig(bytes32,uint256,uint256,uint256,uint256)"(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    changeConfigValue(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "changeConfigValue(bytes32,uint256)"(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    changeGovernor(_new: string, overrides?: CallOverrides): Promise<void>;

    "changeGovernor(address)"(
      _new: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeOwner(_newOwner: string, overrides?: CallOverrides): Promise<void>;

    "changeOwner(address)"(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    checkPair(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "checkPair(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    checkToken(_token: string, overrides?: CallOverrides): Promise<boolean>;

    "checkToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    configs(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "configs(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    defaultListTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "defaultListTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    dev(overrides?: CallOverrides): Promise<string>;

    "dev()"(overrides?: CallOverrides): Promise<string>;

    getConfig(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "getConfig(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      minValue: BigNumber;
      maxValue: BigNumber;
      maxSpan: BigNumber;
      value: BigNumber;
      enable: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getConfigValue(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConfigValue(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultListTokens(overrides?: CallOverrides): Promise<string[]>;

    "getDefaultListTokens()"(overrides?: CallOverrides): Promise<string[]>;

    governor(overrides?: CallOverrides): Promise<string>;

    "governor()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address,address,address[])"(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    iterateValidTokens(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "iterateValidTokens(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    modifyDev(_new: string, overrides?: CallOverrides): Promise<void>;

    "modifyDev(address)"(
      _new: string,
      overrides?: CallOverrides
    ): Promise<void>;

    modifyGovernor(_new: string, overrides?: CallOverrides): Promise<void>;

    "modifyGovernor(address)"(
      _new: string,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    platform(overrides?: CallOverrides): Promise<string>;

    "platform()"(overrides?: CallOverrides): Promise<string>;

    publishTime(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "publishTime(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    publishToken(_token: string, overrides?: CallOverrides): Promise<boolean>;

    "publishToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    registryToken(_token: string, overrides?: CallOverrides): Promise<boolean>;

    "registryToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    tgas(overrides?: CallOverrides): Promise<string>;

    "tgas()"(overrides?: CallOverrides): Promise<string>;

    tokenCount(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenList(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokenStatus(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "tokenStatus(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateToken(
      _token: string,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "updateToken(address,uint256)"(
      _token: string,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    validTokens(overrides?: CallOverrides): Promise<string[]>;

    "validTokens()"(overrides?: CallOverrides): Promise<string[]>;

    version(overrides?: CallOverrides): Promise<BigNumber>;

    "version()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    ChangeGovernor(_old: string | null, _new: string | null): EventFilter;

    ConfigValueChanged(_name: null, _old: null, _value: null): EventFilter;

    OwnerChanged(
      _oldOwner: string | null,
      _newOwner: string | null
    ): EventFilter;

    TokenStatusChanged(
      _token: string | null,
      _status: null,
      _block: null
    ): EventFilter;
  };

  estimateGas: {
    CLOSED(overrides?: CallOverrides): Promise<BigNumber>;

    "CLOSED()"(overrides?: CallOverrides): Promise<BigNumber>;

    NONE(overrides?: CallOverrides): Promise<BigNumber>;

    "NONE()"(overrides?: CallOverrides): Promise<BigNumber>;

    OPENED(overrides?: CallOverrides): Promise<BigNumber>;

    "OPENED()"(overrides?: CallOverrides): Promise<BigNumber>;

    PENDING(overrides?: CallOverrides): Promise<BigNumber>;

    "PENDING()"(overrides?: CallOverrides): Promise<BigNumber>;

    PERCENT_DENOMINATOR(overrides?: CallOverrides): Promise<BigNumber>;

    "PERCENT_DENOMINATOR()"(overrides?: CallOverrides): Promise<BigNumber>;

    REGISTERED(overrides?: CallOverrides): Promise<BigNumber>;

    "REGISTERED()"(overrides?: CallOverrides): Promise<BigNumber>;

    TGAS_DECIMAL(overrides?: CallOverrides): Promise<BigNumber>;

    "TGAS_DECIMAL()"(overrides?: CallOverrides): Promise<BigNumber>;

    addToken(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "addToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeConfig(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeConfig(bytes32,uint256,uint256,uint256,uint256)"(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeConfigValue(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeConfigValue(bytes32,uint256)"(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeGovernor(_new: string, overrides?: Overrides): Promise<BigNumber>;

    "changeGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeOwner(_newOwner: string, overrides?: Overrides): Promise<BigNumber>;

    "changeOwner(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    checkPair(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkPair(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkToken(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "checkToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    configs(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "configs(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    defaultListTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "defaultListTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    dev(overrides?: CallOverrides): Promise<BigNumber>;

    "dev()"(overrides?: CallOverrides): Promise<BigNumber>;

    getConfig(_name: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getConfig(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConfigValue(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConfigValue(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultListTokens(overrides?: CallOverrides): Promise<BigNumber>;

    "getDefaultListTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

    governor(overrides?: CallOverrides): Promise<BigNumber>;

    "governor()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,address,address,address[])"(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    iterateValidTokens(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "iterateValidTokens(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    modifyDev(_new: string, overrides?: Overrides): Promise<BigNumber>;

    "modifyDev(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    modifyGovernor(_new: string, overrides?: Overrides): Promise<BigNumber>;

    "modifyGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    platform(overrides?: CallOverrides): Promise<BigNumber>;

    "platform()"(overrides?: CallOverrides): Promise<BigNumber>;

    publishTime(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "publishTime(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    publishToken(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "publishToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    registryToken(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "registryToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    tgas(overrides?: CallOverrides): Promise<BigNumber>;

    "tgas()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenCount(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenStatus(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "tokenStatus(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateToken(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateToken(address,uint256)"(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    validTokens(overrides?: CallOverrides): Promise<BigNumber>;

    "validTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

    version(overrides?: CallOverrides): Promise<BigNumber>;

    "version()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    CLOSED(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CLOSED()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NONE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "NONE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPENED(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "OPENED()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PENDING(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "PENDING()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PERCENT_DENOMINATOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "PERCENT_DENOMINATOR()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REGISTERED(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "REGISTERED()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TGAS_DECIMAL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TGAS_DECIMAL()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addToken(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeConfig(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeConfig(bytes32,uint256,uint256,uint256,uint256)"(
      _name: BytesLike,
      _minValue: BigNumberish,
      _maxValue: BigNumberish,
      _maxSpan: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeConfigValue(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeConfigValue(bytes32,uint256)"(
      _name: BytesLike,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeGovernor(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeOwner(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeOwner(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    checkPair(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkPair(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    configs(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "configs(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    defaultListTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "defaultListTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    dev(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "dev()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getConfig(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConfig(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConfigValue(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConfigValue(bytes32)"(
      _name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDefaultListTokens(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDefaultListTokens()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    governor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "governor()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,address,address[])"(
      _tgas: string,
      _governor: string,
      _platform: string,
      _dev: string,
      _listTokens: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    iterateValidTokens(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "iterateValidTokens(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    modifyDev(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "modifyDev(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    modifyGovernor(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "modifyGovernor(address)"(
      _new: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    platform(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "platform()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    publishTime(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "publishTime(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    publishToken(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "publishToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    registryToken(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registryToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    tgas(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tgas()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tokenCount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenStatus(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenStatus(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateToken(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateToken(address,uint256)"(
      _token: string,
      _status: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    validTokens(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "validTokens()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "version()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
