/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TomiToken } from "../TomiToken";

export class TomiToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    community: string,
    develop: string,
    liquidity: string,
    overrides?: Overrides
  ): Promise<TomiToken> {
    return super.deploy(
      community,
      develop,
      liquidity,
      overrides || {}
    ) as Promise<TomiToken>;
  }
  getDeployTransaction(
    community: string,
    develop: string,
    liquidity: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      community,
      develop,
      liquidity,
      overrides || {}
    );
  }
  attach(address: string): TomiToken {
    return super.attach(address) as TomiToken;
  }
  connect(signer: Signer): TomiToken__factory {
    return super.connect(signer) as TomiToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TomiToken {
    return new Contract(address, _abi, signerOrProvider) as TomiToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "community",
        type: "address",
      },
      {
        internalType: "address",
        name: "develop",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidity",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_minted_pool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "pool_index",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pool_address",
        type: "address",
      },
    ],
    name: "addLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040526acecb8f27f4200f3a000000608081815260a0919091526b026c62ad77dc602dae00000060c0526a7c13bc4b2c133c5600000060e0526a52b7d2dcc80cd2e4000000610100526200005b906006906005620003f8565b503480156200006957600080fd5b50604051620011d4380380620011d4833981810160405260608110156200008f57600080fd5b50805160208083015160409384015184518086018652600480825263544f4d4960e01b8286018181528851808a01909952918852948701949094528051949592949193909291620000e39160039162000446565b508051620000f990600490602084019062000446565b50506005805460ff19166012179055506001600160a01b03831662000154576040805162461bcd60e51b81526020600482015260176024820152600080516020620011b4833981519152604482015290519081900360640190fd5b6001600160a01b0382166200019f576040805162461bcd60e51b81526020600482015260176024820152600080516020620011b4833981519152604482015290519081900360640190fd5b6001600160a01b038116620001ea576040805162461bcd60e51b81526020600482015260176024820152600080516020620011b4833981519152604482015290519081900360640190fd5b600c80546001600160a01b031916331790556200021783600660005b01546001600160e01b036200027916565b600b805460ff191660019081179091556200023790839060069062000206565b600b805461ff00191661010017905562000255816006600262000206565b5050600b805464ffff0000001962ff000019909116620100001716905550620004d9565b6001600160a01b038216620002d5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620002ec600083836001600160e01b036200039116565b62000308816002546200039660201b62000a321790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200033b91839062000a3262000396821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620003f1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b826005810192821562000434579160200282015b828111156200043457825182906001600160601b03169055916020019190600101906200040c565b5062000442929150620004b9565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200048957805160ff191683800117855562000434565b8280016001018555821562000434579182015b82811115620004345782518255916020019190600101906200049c565b620004d691905b80821115620004425760008155600101620004c0565b90565b610ccb80620004e96000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d714610286578063a9059cbb146102b2578063dd62ed3e146102de578063fe4b91461461030c576100df565b8063395093511461022c57806370a082311461025857806395d89b411461027e576100df565b806323b872dd116100bd57806323b872dd146101bb5780632654fb41146101f1578063313ce5671461020e576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101a1575b600080fd5b6100ec61033d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018d6004803603604081101561017757600080fd5b506001600160a01b0381351690602001356103d3565b604080519115158252519081900360200190f35b6101a96103f0565b60408051918252519081900360200190f35b61018d600480360360608110156101d157600080fd5b506001600160a01b038135811691602081013590911690604001356103f6565b61018d6004803603602081101561020757600080fd5b5035610483565b6102166104aa565b6040805160ff9092168252519081900360200190f35b61018d6004803603604081101561024257600080fd5b506001600160a01b0381351690602001356104b3565b6101a96004803603602081101561026e57600080fd5b50356001600160a01b0316610507565b6100ec610522565b61018d6004803603604081101561029c57600080fd5b506001600160a01b038135169060200135610583565b61018d600480360360408110156102c857600080fd5b506001600160a01b0381351690602001356105f1565b6101a9600480360360408110156102f457600080fd5b506001600160a01b0381358116916020013516610605565b61033b6004803603604081101561032257600080fd5b50803560ff1690602001356001600160a01b0316610630565b005b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b5050505050905090565b60006103e76103e0610744565b8484610748565b50600192915050565b60025490565b6000610403848484610834565b6104798461040f610744565b61047485604051806060016040528060288152602001610c00602891396001600160a01b038a1660009081526001602052604081209061044d610744565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61099b16565b610748565b5060019392505050565b600b816005811061049057fe5b60209182820401919006915054906101000a900460ff1681565b60055460ff1690565b60006103e76104c0610744565b8461047485600160006104d1610744565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610a3216565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b60006103e7610590610744565b8461047485604051806060016040528060258152602001610c7160259139600160006105ba610744565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61099b16565b60006103e76105fe610744565b8484610834565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600c546001600160a01b0316331461064757600080fd5b6001600160a01b0381166106a2576040805162461bcd60e51b815260206004820152601760248201527f546f6d69546f6b656e3a205a45524f2041444452455353000000000000000000604482015290519081900360640190fd5b600360ff831610156106b357600080fd5b600460ff831611156106c457600080fd5b600b8260ff16600581106106d457fe5b602081049091015460ff601f9092166101000a900416156106f457600080fd5b61070f8160068460ff166005811061070857fe5b0154610a93565b6001600b8360ff166005811061072157fe5b602091828204019190066101000a81548160ff0219169083151502179055505050565b3390565b6001600160a01b03831661078d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610c4d6024913960400191505060405180910390fd5b6001600160a01b0382166107d25760405162461bcd60e51b8152600401808060200182810382526022815260200180610bb86022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108795760405162461bcd60e51b8152600401808060200182810382526025815260200180610c286025913960400191505060405180910390fd5b6001600160a01b0382166108be5760405162461bcd60e51b8152600401808060200182810382526023815260200180610b956023913960400191505060405180910390fd5b6108c9838383610b8f565b61090c81604051806060016040528060268152602001610bda602691396001600160a01b038616600090815260208190526040902054919063ffffffff61099b16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610941908263ffffffff610a3216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a2a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109ef5781810151838201526020016109d7565b50505050905090810190601f168015610a1c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a8c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aee576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610afa60008383610b8f565b600254610b0d908263ffffffff610a3216565b6002556001600160a01b038216600090815260208190526040902054610b39908263ffffffff610a3216565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d962501a4e6af1103fd4b1067a852bf0c02b4ed6cd3f4264f96414a17c88050464736f6c63430006060033546f6d69546f6b656e3a205a45524f2041444452455353000000000000000000";
