/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TomiBallot } from "../TomiBallot";

export class TomiBallot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _TOMI: string,
    _proposer: string,
    _value: BigNumberish,
    _endTime: BigNumberish,
    _executionTime: BigNumberish,
    _governor: string,
    _subject: string,
    _content: string,
    overrides?: Overrides
  ): Promise<TomiBallot> {
    return super.deploy(
      _TOMI,
      _proposer,
      _value,
      _endTime,
      _executionTime,
      _governor,
      _subject,
      _content,
      overrides || {}
    ) as Promise<TomiBallot>;
  }
  getDeployTransaction(
    _TOMI: string,
    _proposer: string,
    _value: BigNumberish,
    _endTime: BigNumberish,
    _executionTime: BigNumberish,
    _governor: string,
    _subject: string,
    _content: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _TOMI,
      _proposer,
      _value,
      _endTime,
      _executionTime,
      _governor,
      _subject,
      _content,
      overrides || {}
    );
  }
  attach(address: string): TomiBallot {
    return super.attach(address) as TomiBallot;
  }
  connect(signer: Signer): TomiBallot__factory {
    return super.connect(signer) as TomiBallot__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TomiBallot {
    return new Contract(address, _abi, signerOrProvider) as TomiBallot;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_TOMI",
        type: "address",
      },
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_executionTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TOMI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "end",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ended",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executionTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "voteByGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "weight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010083803806200100883398181016040526101008110156200003857600080fd5b815160208301516040808501516060860151608087015160a088015160c089018051955197999698949793969295919483019291846401000000008211156200008057600080fd5b9083019060208201858111156200009657600080fd5b8251640100000000811182820188101715620000b157600080fd5b82525081516020918201929091019080838360005b83811015620000e0578181015183820152602001620000c6565b50505050905090810190601f1680156200010e5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013257600080fd5b9083019060208201858111156200014857600080fd5b82516401000000008111828201881017156200016357600080fd5b82525081516020918201929091019080838360005b838110156200019257818101518382015260200162000178565b50505050905090810190601f168015620001c05780820380516001836020036101000a031916815260200191505b506040525050600280546001600160a01b03808c166001600160a01b031992831617909255600480548b8416908316179055600589905560068890556007879055600380549287169290911691909117905550815162000228906009906020850190620002a3565b5080516200023e90600a906020840190620002a3565b50506001602052505060007fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f819055600281527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f55505042600c555062000348915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002e657805160ff191683800117855562000316565b8280016001018555821562000316579182015b8281111562000316578251825591602001919060010190620002f9565b506200032492915062000328565b5090565b6200034591905b808211156200032457600081556001016200032f565b90565b610cb080620003586000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063609ff1bd116100cd578063a8e4fb9011610081578063c9c3d42e11610066578063c9c3d42e14610332578063efbe1c1c1461033a578063f4396e2a1461034257610151565b8063a8e4fb9014610322578063c1dfe6521461032a57610151565b806365372147116100b257806365372147146102be5780638a4d5a67146102c6578063a3ec138d146102ce57610151565b8063609ff1bd146102ae57806361dcd7ab146102b657610151565b80632ddbd13a116101245780633fa4f245116101095780633fa4f245146102525780634e34048c1461025a5780635c19a95c1461028857610151565b80632ddbd13a146102425780633197cbb61461024a57610151565b8063013cf08b146101565780630a59a98c146101855780630c340a241461020257806312fa6feb14610226575b600080fd5b6101736004803603602081101561016c57600080fd5b5035610368565b60408051918252519081900360200190f35b61018d61037a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c75781810151838201526020016101af565b50505050905090810190601f1680156101f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020a610408565b604080516001600160a01b039092168252519081900360200190f35b61022e610417565b604080519115158252519081900360200190f35b610173610420565b610173610426565b61017361042c565b6102866004803603604081101561027057600080fd5b506001600160a01b038135169060200135610432565b005b6102866004803603602081101561029e57600080fd5b50356001600160a01b0316610553565b61017361073f565b610173610803565b61022e610809565b61018d610847565b6102f4600480360360208110156102e457600080fd5b50356001600160a01b03166108a2565b6040805194855292151560208501526001600160a01b03909116838301526060830152519081900360800190f35b61020a6108d7565b61020a6108e6565b6101736108f5565b61022e6108fb565b6101736004803603602081101561035857600080fd5b50356001600160a01b0316610a26565b60016020526000908152604090205481565b6009805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b505050505081565b6003546001600160a01b031681565b60085460ff1681565b600b5481565b60065481565b60055481565b6003546001600160a01b03163314610491576040805162461bcd60e51b815260206004820152601560248201527f546f6d6942616c6c6f743a20464f5242494444454e0000000000000000000000604482015290519081900360640190fd5b600061049c83610a8e565b905060018214806104ad5750600282145b6104fe576040805162461bcd60e51b815260206004820152601060248201527f4f6e6c7920766f74652031206f72203200000000000000000000000000000000604482015290519081900360640190fd5b6001818101805460ff19168217905560028201839055815460008481526020929092526040909120805490910190556004546001600160a01b0384811691161461054e578054600b805490910190555b505050565b600061055e33610a8e565b90506001600160a01b0382163314156105be576040805162461bcd60e51b815260206004820152601d60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f776564000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526020819052604090206001015461010090041615610666576001600160a01b0391821660009081526020819052604090206001015461010090049091169033821415610661576040805162461bcd60e51b815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e0000000000000000604482015290519081900360640190fd5b6105be565b6001818101805460ff191682177fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0386169081029190911790915560009081526020819052604090209081015460ff161561070d57815460028201546000908152600160205260409020805490910190556004546001600160a01b03163314156106fc5760006106ff565b81545b600b8054909101905561054e565b815481540181556004546001600160a01b031633141561072e576000610731565b81545b600b80549091019055505050565b600160208190527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f5460009182527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54111561079d57506001610800565b600160208190527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f546000919091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5410156107fc57506002610800565b5060005b90565b600c5481565b60008061081461073f565b905060018114801561083057506729a2241af62c0000600b5410155b1561083f576001915050610800565b600091505090565b600a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104005780601f106103d557610100808354040283529160200191610400565b600060208190529081526040902080546001820154600290920154909160ff8116916101009091046001600160a01b03169084565b6004546001600160a01b031681565b6002546001600160a01b031681565b60075481565b6003546000906001600160a01b0316331461095d576040805162461bcd60e51b815260206004820152601560248201527f546f6d6942616c6c6f743a20464f5242494444454e0000000000000000000000604482015290519081900360640190fd5b6007544210156109b4576040805162461bcd60e51b815260206004820152601460248201527f62616c6c6f74206e6f742079657420656e646564000000000000000000000000604482015290519081900360640190fd5b60085460ff1615610a0c576040805162461bcd60e51b815260206004820152601b60248201527f656e642068617320616c7265616479206265656e2063616c6c65640000000000604482015290519081900360640190fd5b6008805460ff19166001179055610a21610809565b905090565b6000610a30610c47565b50506001600160a01b039081166000908152602081815260409182902082516080810184528154808252600183015460ff81161515948301949094526101009093049094169284019290925260029091015460609092019190915290565b60006006544210610ae6576040805162461bcd60e51b815260206004820152600f60248201527f42616c6c6f7420697320656e6465640000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000908152602081905260409020600181015460ff1615610b58576040805162461bcd60e51b815260206004820152601160248201527f596f7520616c726561647920766f746564000000000000000000000000000000604482015290519081900360640190fd5b600354604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d6020811015610be857600080fd5b5051815401808255610c41576040805162461bcd60e51b815260206004820152601460248201527f486173206e6f20726967687420746f20766f7465000000000000000000000000604482015290519081900360640190fd5b92915050565b60405180608001604052806000815260200160001515815260200160006001600160a01b0316815260200160008152509056fea2646970667358221220bbfc5749ac7140d0cc1913e4a9ed42570464c5e5eda633c986c3a4a6e3a1496964736f6c63430006060033";
