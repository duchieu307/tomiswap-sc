/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TomiBallotRevenue } from "../TomiBallotRevenue";

export class TomiBallotRevenue__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _TOMI: string,
    _proposer: string,
    _endTime: BigNumberish,
    _executionTime: BigNumberish,
    _governor: string,
    _subject: string,
    _content: string,
    overrides?: Overrides
  ): Promise<TomiBallotRevenue> {
    return super.deploy(
      _TOMI,
      _proposer,
      _endTime,
      _executionTime,
      _governor,
      _subject,
      _content,
      overrides || {}
    ) as Promise<TomiBallotRevenue>;
  }
  getDeployTransaction(
    _TOMI: string,
    _proposer: string,
    _endTime: BigNumberish,
    _executionTime: BigNumberish,
    _governor: string,
    _subject: string,
    _content: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _TOMI,
      _proposer,
      _endTime,
      _executionTime,
      _governor,
      _subject,
      _content,
      overrides || {}
    );
  }
  attach(address: string): TomiBallotRevenue {
    return super.attach(address) as TomiBallotRevenue;
  }
  connect(signer: Signer): TomiBallotRevenue__factory {
    return super.connect(signer) as TomiBallotRevenue__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TomiBallotRevenue {
    return new Contract(address, _abi, signerOrProvider) as TomiBallotRevenue;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_TOMI",
        type: "address",
      },
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_executionTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TOMI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "end",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ended",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executionTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "participateByGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participators",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "participated",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "weight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d2638038062000d26833981810160405260e08110156200003757600080fd5b815160208301516040808501516060860151608087015160a0880180519451969895979396929591949293820192846401000000008211156200007957600080fd5b9083019060208201858111156200008f57600080fd5b8251640100000000811182820188101715620000aa57600080fd5b82525081516020918201929091019080838360005b83811015620000d9578181015183820152602001620000bf565b50505050905090810190601f168015620001075780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012b57600080fd5b9083019060208201858111156200014157600080fd5b82516401000000008111828201881017156200015c57600080fd5b82525081516020918201929091019080838360005b838110156200018b57818101518382015260200162000171565b50505050905090810190601f168015620001b95780820380516001836020036101000a031916815260200191505b506040525050600180546001600160a01b03808b166001600160a01b031992831617909255600380548a84169083161790556004889055600587905560028054928716929091169190911790555081516200021c90600790602085019062000245565b5080516200023290600890602084019062000245565b505042600a5550620002ea945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028857805160ff1916838001178555620002b8565b82800160010185558215620002b8579182015b82811115620002b85782518255916020019190600101906200029b565b50620002c6929150620002ca565b5090565b620002e791905b80821115620002c65760008155600101620002d1565b90565b610a2c80620002fa6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635c19a95c11610097578063c1dfe65211610066578063c1dfe6521461028c578063c9c3d42e14610294578063efbe1c1c1461029c578063f4396e2a146102a4576100f5565b80635c19a95c1461024e57806361dcd7ab146102745780638a4d5a671461027c578063a8e4fb9014610284576100f5565b80631590a056116100d35780631590a056146101b75780632ddbd13a146101df5780633197cbb6146101f95780633a372c9414610201576100f5565b80630a59a98c146100fa5780630c340a241461017757806312fa6feb1461019b575b600080fd5b6101026102ca565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017f610358565b604080516001600160a01b039092168252519081900360200190f35b6101a3610367565b604080519115158252519081900360200190f35b6101dd600480360360208110156101cd57600080fd5b50356001600160a01b0316610370565b005b6101e7610412565b60408051918252519081900360200190f35b6101e7610418565b6102276004803603602081101561021757600080fd5b50356001600160a01b031661041e565b6040805193845291151560208401526001600160a01b031682820152519081900360600190f35b6101dd6004803603602081101561026457600080fd5b50356001600160a01b031661044a565b6101e761061b565b610102610621565b61017f61067c565b61017f61068b565b6101e761069a565b6101a36106a0565b6101e7600480360360208110156102ba57600080fd5b50356001600160a01b03166107c7565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b505050505081565b6002546001600160a01b031681565b60065460ff1681565b6002546001600160a01b031633146103cf576040805162461bcd60e51b815260206004820152601560248201527f546f6d6942616c6c6f743a20464f5242494444454e0000000000000000000000604482015290519081900360640190fd5b60006103da8261081d565b6001808201805460ff191690911790556003549091506001600160a01b0383811691161461040e5780546009805490910190555b5050565b60095481565b60045481565b6000602081905290815260409020805460019091015460ff81169061010090046001600160a01b031683565b60006104553361081d565b90506001600160a01b0382163314156104b5576040805162461bcd60e51b815260206004820152601d60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f776564000000604482015290519081900360640190fd5b6001600160a01b038281166000908152602081905260409020600101546101009004161561055d576001600160a01b0391821660009081526020819052604090206001015461010090049091169033821415610558576040805162461bcd60e51b815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e0000000000000000604482015290519081900360640190fd5b6104b5565b6001818101805460ff191682177fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0386169081029190911790915560009081526020819052604090209081015460ff16156105e8576003546001600160a01b03163314156105d75760006105da565b81545b600980549091019055610616565b815481540181556003546001600160a01b031633141561060957600061060c565b81545b6009805490910190555b505050565b600a5481565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103505780601f1061032557610100808354040283529160200191610350565b6003546001600160a01b031681565b6001546001600160a01b031681565b60055481565b6002546000906001600160a01b03163314610702576040805162461bcd60e51b815260206004820152601560248201527f546f6d6942616c6c6f743a20464f5242494444454e0000000000000000000000604482015290519081900360640190fd5b600554421015610759576040805162461bcd60e51b815260206004820152601460248201527f62616c6c6f74206e6f742079657420656e646564000000000000000000000000604482015290519081900360640190fd5b60065460ff16156107b1576040805162461bcd60e51b815260206004820152601b60248201527f656e642068617320616c7265616479206265656e2063616c6c65640000000000604482015290519081900360640190fd5b506006805460ff19166001179081905560ff1690565b60006107d16109d6565b50506001600160a01b03908116600090815260208181526040918290208251606081018452815480825260019092015460ff811615159382019390935261010090920490931691015290565b60006004544210610875576040805162461bcd60e51b815260206004820152600f60248201527f42616c6c6f7420697320656e6465640000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000908152602081905260409020600181015460ff16156108e7576040805162461bcd60e51b815260206004820152601a60248201527f596f7520616c726561647920706172746963697061746520696e000000000000604482015290519081900360640190fd5b600254604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152915191909216916370a08231916024808301926020929190829003018186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d602081101561097757600080fd5b50518154018082556109d0576040805162461bcd60e51b815260206004820152601e60248201527f486173206e6f20726967687420746f20706172746963697061746520696e0000604482015290519081900360640190fd5b92915050565b60408051606081018252600080825260208201819052918101919091529056fea26469706673582212204586a241de61f718706c1e4531ebe478cd2287ee939c9b89ee990ba87528726064736f6c63430006060033";
